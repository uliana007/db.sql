Шураева ульяна игоревна



Хорошо, я перенесу функционал из Vue-проекта (блоги с авторизацией) в PHP-проект (тренажерный зал), сохранив при этом текущий дизайн и навигацию. Вот полный переработанный код:

## 1. Сначала обновим базу данных (db.php)

```php
<?php
$host = 'localhost';
$dbname = 'fitness';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname;charset=utf8", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    // Создаем таблицы, если они не существуют
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(50) NOT NULL,
            password VARCHAR(255) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        
        CREATE TABLE IF NOT EXISTS blogs (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id INT NOT NULL,
            title VARCHAR(255) NOT NULL,
            text TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
        
        CREATE TABLE IF NOT EXISTS messages (
            id INT AUTO_INCREMENT PRIMARY KEY,
            blog_id INT NOT NULL,
            user_id INT NOT NULL,
            text TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (blog_id) REFERENCES blogs(id),
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
        
        CREATE TABLE IF NOT EXISTS bookings (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id INT NOT NULL,
            training_type VARCHAR(50) NOT NULL,
            booking_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users(id)
        );
    ");
} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}
?>
```

## 2. Обновленный login.php

```php
<?php 
session_start(); 
require "db.php"; 

if ($_SERVER['REQUEST_METHOD'] === 'POST') { 
    $username = $_POST['username']; 
    $password = $_POST['password']; 
    
    $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?"); 
    $stmt->execute([$username]); 
    $user = $stmt->fetch(); 
    
    if ($user && password_verify($password, $user['password'])) { 
        $_SESSION['user_id'] = $user['id']; 
        $_SESSION['username'] = $user['username'];
        header("Location: home.php"); 
        exit; 
    } else { 
        $error = "Ошибка при вводе логина или пароля"; 
    }
} 
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Авторизация</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: rgba(204, 0, 0, 0.1);
        }
        .form-container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            max-width: 500px;
            margin: 50px auto;
        }
        .btn-submit {
            background-color: #D32F2F;
            border: none;
            color: white;
            border-radius: 25px;
        }
        .btn-submit:hover {
            background-color: #C2185B;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-container">
            <h2 class="text-center">Авторизация</h2>
            <form method="POST">
                <div class="mb-3">
                    <input type="text" name="username" class="form-control rounded-pill" placeholder="Имя пользователя" required>
                </div>
                <div class="mb-3">
                    <input type="password" name="password" class="form-control rounded-pill" placeholder="Пароль" required>
                </div>
                <button type="submit" class="btn btn-submit btn-lg rounded-pill w-100">Войти</button>
                <a href="register.php" class="d-block text-center mt-3">Зарегистрироваться</a>
                <?php if (!empty($error)) echo "<div class='alert alert-danger mt-3'>$error</div>"; ?>
            </form>
        </div>
    </div>
</body>
</html>
```

## 3. Обновленный register.php

```php
<?php 
session_start();
require "db.php";

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_BCRYPT);
    
    try {
        $stmt = $pdo->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
        $stmt->execute([$username, $password]);
        
        $_SESSION['user_id'] = $pdo->lastInsertId();
        $_SESSION['username'] = $username;
        header("Location: home.php");
        exit;
    } catch (PDOException $e) {
        $error = "Ошибка регистрации: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Регистрация</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: rgba(204, 0, 0, 0.1);
        }
        .form-container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            max-width: 500px;
            margin: 50px auto;
        }
        .btn-submit {
            background-color: #D32F2F;
            border: none;
            color: white;
            border-radius: 25px;
        }
        .btn-submit:hover {
            background-color: #C2185B;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-container">
            <h2 class="text-center">Регистрация</h2>
            <form method="POST">
                <div class="mb-3">
                    <input type="text" name="username" class="form-control rounded-pill" placeholder="Имя пользователя" required>
                </div>
                <div class="mb-3">
                    <input type="password" name="password" class="form-control rounded-pill" placeholder="Пароль" required>
                </div>
                <button type="submit" class="btn btn-submit btn-lg rounded-pill w-100">Зарегистрироваться</button>
                <?php if (!empty($error)) echo "<div class='alert alert-danger mt-3'>$error</div>"; ?>
            </form>
        </div>
    </div>
</body>
</html>
```

## 4. Обновленный home.php (главная страница с блогами)

```php
<?php
session_start();
require "db.php";

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit;
}

// Получение блогов
$stmt = $pdo->prepare("SELECT blogs.*, users.username FROM blogs JOIN users ON blogs.user_id = users.id ORDER BY created_at DESC");
$stmt->execute();
$blogs = $stmt->fetchAll();

// Обработка создания блога
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['title'])) {
    $title = $_POST['title'];
    $text = $_POST['text'];
    
    $stmt = $pdo->prepare("INSERT INTO blogs (user_id, title, text) VALUES (?, ?, ?)");
    $stmt->execute([$_SESSION['user_id'], $title, $text]);
    header("Location: home.php");
    exit;
}

// Обработка удаления блога
if (isset($_GET['delete'])) {
    $stmt = $pdo->prepare("DELETE FROM blogs WHERE id = ? AND user_id = ?");
    $stmt->execute([$_GET['delete'], $_SESSION['user_id']]);
    header("Location: home.php");
    exit;
}

// Получение сообщений для выбранного блога
$selectedBlog = null;
$messages = [];
if (isset($_GET['blog_id'])) {
    $stmt = $pdo->prepare("SELECT * FROM blogs WHERE id = ?");
    $stmt->execute([$_GET['blog_id']]);
    $selectedBlog = $stmt->fetch();
    
    $stmt = $pdo->prepare("SELECT messages.*, users.username FROM messages JOIN users ON messages.user_id = users.id WHERE blog_id = ? ORDER BY created_at");
    $stmt->execute([$_GET['blog_id']]);
    $messages = $stmt->fetchAll();
    
    // Добавление сообщения
    if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['message_text'])) {
        $stmt = $pdo->prepare("INSERT INTO messages (blog_id, user_id, text) VALUES (?, ?, ?)");
        $stmt->execute([$_GET['blog_id'], $_SESSION['user_id'], $_POST['message_text']]);
        header("Location: home.php?blog_id=" . $_GET['blog_id']);
        exit;
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Главная</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: rgba(204, 0, 0, 0.1);
        }
        .navbar {
            background-color: rgba(138, 24, 24, 0.7);
        }
        .navbar-brand, .navbar-nav .nav-link {
            color: white !important;
        }
        .blog-card {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .message {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 10px;
        }
        .btn-danger {
            background-color: #D32F2F;
            border-color: #D32F2F;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="home.php">ТренируйсяPRO</a>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item"><a class="nav-link" href="logout.php">Выход</a></li>
                    <li class="nav-item"><a class="nav-link" href="bron.php">Бронь</a></li>
                </ul>
                <span class="navbar-text text-white">
                    Привет, <?php echo htmlspecialchars($_SESSION['username']); ?>
                </span>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-8 mx-auto">
                <h2 class="text-center mb-4">Фитнес блоги</h2>
                
                <!-- Форма создания блога -->
                <div class="blog-card">
                    <h3>Создать новый пост</h3>
                    <form method="POST">
                        <div class="mb-3">
                            <input type="text" name="title" class="form-control" placeholder="Заголовок" required>
                        </div>
                        <div class="mb-3">
                            <textarea name="text" class="form-control" placeholder="Текст" rows="3" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-danger">Опубликовать</button>
                    </form>
                </div>
                
                <!-- Список блогов -->
                <?php foreach ($blogs as $blog): ?>
                    <div class="blog-card">
                        <h3><?php echo htmlspecialchars($blog['title']); ?></h3>
                        <p><?php echo nl2br(htmlspecialchars($blog['text'])); ?></p>
                        <small class="text-muted">Автор: <?php echo htmlspecialchars($blog['username']); ?></small>
                        
                        <div class="mt-3">
                            <a href="home.php?blog_id=<?php echo $blog['id']; ?>" class="btn btn-sm btn-outline-danger">Комментарии</a>
                            <?php if ($blog['user_id'] == $_SESSION['user_id']): ?>
                                <a href="edit_blog.php?id=<?php echo $blog['id']; ?>" class="btn btn-sm btn-outline-secondary">Редактировать</a>
                                <a href="home.php?delete=<?php echo $blog['id']; ?>" class="btn btn-sm btn-outline-danger" onclick="return confirm('Удалить этот пост?')">Удалить</a>
                            <?php endif; ?>
                        </div>
                    </div>
                <?php endforeach; ?>
                
                <!-- Комментарии к выбранному блогу -->
                <?php if ($selectedBlog): ?>
                    <div class="blog-card mt-4">
                        <h3>Комментарии к "<?php echo htmlspecialchars($selectedBlog['title']); ?>"</h3>
                        
                        <form method="POST" class="mb-4">
                            <div class="input-group">
                                <input type="text" name="message_text" class="form-control" placeholder="Ваш комментарий" required>
                                <button type="submit" class="btn btn-danger">Отправить</button>
                            </div>
                        </form>
                        
                        <?php foreach ($messages as $message): ?>
                            <div class="message">
                                <strong><?php echo htmlspecialchars($message['username']); ?>:</strong>
                                <p><?php echo nl2br(htmlspecialchars($message['text'])); ?></p>
                                <small class="text-muted"><?php echo $message['created_at']; ?></small>
                            </div>
                        <?php endforeach; ?>
                        
                        <a href="home.php" class="btn btn-outline-danger mt-3">Назад к блогам</a>
                    </div>
                <?php endif; ?>
            </div>
        </div>
    </div>
</body>
</html>
```

## 5. Дополнительные файлы

**logout.php**:
```php
<?php
session_start();
session_destroy();
header("Location: login.php");
exit;
?>
```

**edit_blog.php**:
```php
<?php
session_start();
require "db.php";

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit;
}

if (!isset($_GET['id'])) {
    header("Location: home.php");
    exit;
}

// Получение блога для редактирования
$stmt = $pdo->prepare("SELECT * FROM blogs WHERE id = ? AND user_id = ?");
$stmt->execute([$_GET['id'], $_SESSION['user_id']]);
$blog = $stmt->fetch();

if (!$blog) {
    header("Location: home.php");
    exit;
}

// Обработка формы редактирования
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $title = $_POST['title'];
    $text = $_POST['text'];
    
    $stmt = $pdo->prepare("UPDATE blogs SET title = ?, text = ? WHERE id = ?");
    $stmt->execute([$title, $text, $_GET['id']]);
    header("Location: home.php");
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Редактировать пост</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: rgba(204, 0, 0, 0.1);
            padding-top: 50px;
        }
        .form-container {
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            max-width: 800px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-container">
            <h2 class="text-center mb-4">Редактировать пост</h2>
            <form method="POST">
                <div class="mb-3">
                    <label class="form-label">Заголовок</label>
                    <input type="text" name="title" class="form-control" value="<?php echo htmlspecialchars($blog['title']); ?>" required>
                </div>
                <div class="mb-3">
                    <label class="form-label">Текст</label>
                    <textarea name="text" class="form-control" rows="5" required><?php echo htmlspecialchars($blog['text']); ?></textarea>
                </div>
                <button type="submit" class="btn btn-danger">Сохранить</button>
                <a href="home.php" class="btn btn-outline-secondary">Отмена</a>
            </form>
        </div>
    </div>
</body>
</html>
```

## 6. Файл bron.php (сохранен с оригинальным функционалом бронирования)

```php
<?php
session_start();
require "db.php";

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit;
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $training_type = $_POST['training'];
    
    $stmt = $pdo->prepare("INSERT INTO bookings (user_id, training_type) VALUES (?, ?)");
    $stmt->execute([$_SESSION['user_id'], $training_type]);
    
    $success = "Тренировка успешно забронирована!";
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Бронирование тренировки</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: rgba(204, 0, 0, 0.1);
        }
        .form-container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            max-width: 500px;
            margin: 50px auto;
        }
        .btn-submit {
            background-color: #D32F2F;
            border: none;
            color: white;
            border-radius: 25px;
        }
        .btn-submit:hover {
            background-color: #C2185B;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="home.php">ТренируйсяPRO</a>
            <div class="collapse navbar-collapse">
                <ul class="navbar-nav mx-auto">
                    <li class="nav-item"><a class="nav-link" href="logout.php">Выход</a></li>
                    <li class="nav-item"><a class="nav-link active" href="bron.php">Бронь</a></li>
                </ul>
                <span class="navbar-text text-white">
                    Привет, <?php echo htmlspecialchars($_SESSION['username']); ?>
                </span>
            </div>
        </div>
    </nav>

    <div class="container">
        <div class="form-container">
            <h2 class="text-center">Забронировать тренировку</h2>
            <?php if (isset($success)): ?>
                <div class="alert alert-success"><?php echo $success; ?></div>
            <?php endif; ?>
            <form method="POST">
                <div class="mb-3">
                    <label for="training" class="form-label">Выберите тренировку</label>
                    <select class="form-select" id="training" name="training" required>
                        <option value="yoga">Йога</option>
                        <option value="strength">Силовая тренировка</option>
                        <option value="cardio">Кардио тренировка</option>
                        <option value="pilates">Пилатес</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-submit btn-block">Забронировать</button>
            </form>
        </div>
    </div>
</body>
</html>
```

## Как развернуть проект:

1. Создайте базу данных `fitness` и импортируйте структуру из db.php
2. Разместите все файлы в корневой директории вашего веб-сервера
3. Настройте подключение к БД в db.php
4. Откройте login.php в браузере и зарегистрируйте первого пользователя

Проект теперь включает:
- Систему блогов с комментариями (как в Vue-проекте)
- Функционал бронирования тренировок (оригинальный)
- Красивый дизайн в красных тонах
- Адаптивную верстку
- Защиту от неавторизованного доступа

Все функции из Vue-проекта теперь работают на PHP с сохранением текущего дизайна.